import telebot
import time
from telebot import types,apihelper
import random
import keyboards
import traceback
import pymysql
import config

last_time = {}
bot = telebot.TeleBot(config.token)

admins_users = ['','','']


def connect():
	con = pymysql.connect(
		host='',
		user='',
		password='',
		database='')
	cursor = con.cursor()
	return con, cursor

@bot.message_handler(commands=['start'])
def start_message(message):
	print(message.chat.id)
	if str(message.chat.type) == 'private':
		if message.chat.id not in last_time:
			last_time[message.chat.id] = time.time()
			start_messages(message)
		else:
			if (time.time() - last_time[message.chat.id]) * 1000 < 1000:
				return 0
			else:
				start_messages(message)
			last_time[message.chat.id] = time.time()


def start_messages(message):
	userid = str(message.chat.id)
	username = str(message.from_user.username)
	connection,q = connect()
	q.execute(f'SELECT * FROM ugc_users WHERE userid = "{userid}"')
	row = q.fetchone()
	if row is None:
		bot.send_message(config.chat_message, f'–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <a href="tg://user?id={userid}">{userid}</a>',parse_mode='HTML')
		q.execute("INSERT INTO ugc_users (userid) VALUES ('%s')"%(userid))
		connection.commit()
	bot.send_message(message.chat.id, f'<b>üß∏ –ü—Ä–∏–≤–µ—Ç, —è –ø–æ–º–æ–≥—É –æ—á–∏—Å—Ç–∏—Ç—å —Ç–≤–æ–∏ –º–æ–Ω–µ—Ç–∫–∏ –¥–æ –±–ª–µ—Å–∫–∞</b>',parse_mode='HTML',reply_markup=keyboards.main())


@bot.message_handler(content_types=['text'])
def send_text(message):
	if str(message.chat.type) == 'private':
		try:
			connection,q = connect()
			if message.text == '/admin' and str(message.chat.id) in admins_users:
				markup = types.InlineKeyboardMarkup(row_width=1)
				markup.add(
				types.InlineKeyboardButton(text='‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', callback_data='admin_info'),
				types.InlineKeyboardButton(text='‚öôÔ∏è –†–∞—Å—Å—ã–ª–∫–∞', callback_data='email_sending'),
				)
				msg = bot.send_message(message.chat.id, '<b>ü•∞ –î–µ—Ä–∂–∏ –º–µ–Ω—é—à–∫—É, –∫—Ä–∞—Å–∞–≤—á–∏–∫</b>',parse_mode='HTML',reply_markup=markup)

			if message.text == 'üëÆ‚Äç‚ôÄÔ∏è –ú–∏–∫—Å–µ—Ä':
				main = types.InlineKeyboardMarkup()
				main.add(types.InlineKeyboardButton(text='üç™ BANKER',callback_data='–±–∞–Ω–∫–∏—Ä'),types.InlineKeyboardButton(text='üç™ CHATEX',callback_data='—á–∞—Ç–µ–∫—Å'))
				msg = bot.send_message(message.chat.id, '''<b>–í—ã–±–µ—Ä–∏, –∫–∞–∫–∏–º —Å–ø–æ—Å–æ–±–æ–º –±—É–¥–µ—à—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≥—Ä—è–∑—å\n\n<code>üîÆ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –æ—Ç–º—ã–≤–∞: 500 RUB</code>
–ß–µ–∫–∏ –Ω–∏–∂–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã - –∏–¥—É—Ç –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –≤—ã–ø–ª–∞—á–∏–≤–∞—Ç—å—Å—è –Ω–µ –±—É–¥—É—Ç!

<i>–°—É–º–º—ã –≤—ã—à–µ <code>20000 RUB</code> –æ–±–≥–æ–≤–∞—Ä–∏–≤–∞—é—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ!</i>

‚ù§Ô∏è –ù–∞—à–∏ –ø—Ä–æ—Ü–µ–Ω—Ç—ã:
<code>5% –¥–æ 5000—Ä –∏ 10% –æ—Ç 5000</code></b>''',parse_mode='HTML',reply_markup=main)
			if message.text == 'üìñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
				main = types.InlineKeyboardMarkup()
				# main.add(types.InlineKeyboardButton(text='üìñ –ü–æ–¥—Ä–æ–±–Ω–µ–µ',callback_data='–ø–æ–¥—Ä–æ–±–Ω–µ–µ'))
				main.add(types.InlineKeyboardButton(text='ü¶π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è',url='t.me/AVTOMIXER'))
				main.add(types.InlineKeyboardButton(text='üçì –û—Ç–∑—ã–≤—ã',url='t.me/avtomixer0'))
				msg = bot.send_message(message.chat.id, '''<b>üì∞ –ü–æ–Ω—è—Ç–∏–µ ¬´–æ—Ç–º—ã–≤–∞–Ω–∏–µ –¥–µ–Ω–µ–≥¬ª –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –∏–∑–≤–µ—Å—Ç–Ω—ã–º –∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–º –≥–∞–Ω–≥—Å—Ç–µ—Ä–æ–º –ê–ª—å –ö–∞–ø–æ–Ω–µ. –î–ª—è –ª–µ–≥–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–µ–Ω–µ–≥, –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –ø—Ä–µ—Å—Ç—É–ø–Ω—ã—Ö –ø—É—Ç–µ–º, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞—Å—å —Ü–µ–ª–∞—è —Å–µ—Ç—å –ø—Ä–∞—á–µ—á–Ω—ã—Ö.

‚ù§Ô∏è –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∞–º—ã–µ –∞–Ω–æ–Ω–∏–º–Ω—ã–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã:
üç™ Monero
üç™ Zcash
üç™ Dash
üç™ Verge

üå∫ –û—Ç –Ω–∞—Å —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å: –±—ã—Å—Ç—Ä—ã–µ, —á–∏—Å—Ç—ã–µ, –∞–Ω–æ–Ω–∏–º–Ω—ã–µ –º–æ–Ω–µ—Ç—ã! –í—Ä–µ–º—è –æ—Ç–º—ã–≤–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å—É–º–º—ã, –æ–±—ã—á–Ω–æ —ç—Ç–æ –æ–∫–æ–ª–æ 80 –º–∏–Ω—É—Ç!</b>
''',parse_mode='HTML', reply_markup=main)

			if message.text == 'üìñ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
				send_infa(message)


			elif 'BTC_CHANGE_BOT?start='.lower() in message.text.lower():
				for i in message.entities:
					if i.type == 'url' or i.type == 'text_link':
						connection,q = connect()
						
						#bot.send_message('-1001270414760', message.text.split('start=')[1])
						q.execute("INSERT INTO ugc_pays_btc (userid,text,bot) VALUES ('%s','%s','%s')"%(message.chat.id, message.text.split('start=')[1], 'banker'))
						connection.commit()
						
			elif message.text == 'üì±–°–∞–º—ã–µ –õ—É—á—à–∏–µ –ù–æ–º–µ—Ä–∞üì≤':
				bot.send_photo(message.chat.id, open('ad.jpg', 'rb'),caption='''–ù–µ –∑–Ω–∞–µ—à—å –≥–¥–µ –±—ã—Å—Ç—Ä–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ –∫—É–ø–∏—Ç—å –Ω–æ–º–µ—Ä –¥–ª—è —Å–≤–æ–∏—Ö –Ω—É–∂–¥?
–ú—ã –±–æ–ª–µ–µ 10 –º–µ—Å—è—Ü–µ–≤ –Ω–∞ —Ä—ã–Ω–∫–µ –∑–Ω–∞–µ–º –≤—Å–µ –ª—É—á—à–µ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö!
–ó–∞–ª–µ—Ç–∞–π @AVTOREGBOT —Å–∞–º—ã–µ –Ω—É–∂–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –∏ –º–Ω–æ–≥–æ —Å—Ç—Ä–∞–Ω!
–í–∞–ª–∏–¥–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ –∏ –±—ã—Å—Ç—Ä–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É—é! 
–ú—ã –Ω–µ —Å—Ç–æ–∏–º –Ω–∞ –º–µ—Å—Ç–µ –∏ –¥–≤–∏–≥–∞–µ–º—Å—è –≤–ø–µ—Ä–µ–¥! –í–ø–µ—Ä–µ–¥–∏ –µ—â–µ –º–Ω–æ–≥–æ –æ–±–Ω–æ–≤!
@AVTOREGBOT –º—ã —Ä–∞–¥—ã –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é!''')

			elif 'Chatex_bot?start='.lower() in message.text.lower():
				for i in message.entities:
					if i.type == 'url' or i.type == 'text_link':
						connection,q = connect()
						
						# bot.send_message('-1001270414760', message.text.split('start=')[1])
						delete = types.InlineKeyboardMarkup()
						delete.add(types.InlineKeyboardButton(text=f'üîö –°–∫—Ä—ã—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ', callback_data='—Å–∫—Ä—ã—Ç—å'))
						bot.send_message(message.chat.id,'üèµ –ß–µ–∫ –ø–æ–ª—É—á–µ–Ω! –ò–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞...',reply_markup=delete)
						q.execute("INSERT INTO ugc_pays_btc (userid,text,bot) VALUES ('%s','%s','%s')"%(message.chat.id, message.text, 'chatex'))
						connection.commit()
		except Exception as e:
			bot.send_message(825416463,traceback.format_exc())

@bot.callback_query_handler(func=lambda call:True)
def callback_inline(call):
	msg = call.data
	connection,q = connect()
	if msg == 'admin_info':
		connection,q = connect()
		q.execute(f'SELECT COUNT(userid) FROM ugc_users')
		count_users = q.fetchone()[0]
		bot.send_message(call.message.chat.id, f'''‚ùï –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è - <b>{count_users}</b>''',parse_mode='HTML')

	if msg == '–±–∞–Ω–∫–∏—Ä':
		msg = bot.send_message(call.message.chat.id, '<b>–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —á–µ–∫ –≤ —á–∞—Ç üëáüëáüëá</b>',parse_mode='HTML')
	elif msg == '—á–∞—Ç–µ–∫—Å':
		msg = bot.send_message(call.message.chat.id, '<b>–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –≤–∞—É–Ω—á–µ—Ä –≤ —á–∞—Ç üëáüëáüëá</b>',parse_mode='HTML')
	elif '–ø–∏—à–µ–º' in msg:
		send = bot.send_message(call.message.chat.id, f'<b>–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {msg.split(":")[1]}</b>',parse_mode='HTML')
		bot.register_next_step_handler(send, sender, msg.split(":")[1])
	elif msg == '–ø–æ–¥—Ä–æ–±–Ω–µ–µ':
		bot.send_message(call.message.chat.id, '''<b>
<code>üîÆ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –æ—Ç–º—ã–≤–∞: 500 RUB</code>
–ß–µ–∫–∏ –Ω–∏–∂–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã - –∏–¥—É—Ç –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –≤—ã–ø–ª–∞—á–∏–≤–∞—Ç—å—Å—è –Ω–µ –±—É–¥—É—Ç!

<i>–°—É–º–º—ã –≤—ã—à–µ <code>20000 RUB</code> –æ–±–≥–æ–≤–∞—Ä–∏–≤–∞—é—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ!</i>

‚ù§Ô∏è –ù–∞—à–∏ –ø—Ä–æ—Ü–µ–Ω—Ç—ã:
<code>5% –¥–æ 5000—Ä –∏ 10% –æ—Ç 5000</code>

–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º, –ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏</b>''',parse_mode='HTML')
	
	elif str(msg) == 'email_sending':
		if str(call.message.chat.id) in admins_users:
			mmsg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏',parse_mode='HTML')
			bot.register_next_step_handler(mmsg, send_photoorno)

def sender(message,chatid):
	bot.send_message(chatid, message.text, parse_mode='html')


def send_photoorno(message):
	global text_send_all
	global json_entit
	text_send_all = message.text
	json_entit = None
	if 'entities' in message.json:
		json_entit = message.json['entities']
	msg = bot.send_message(message.chat.id, '<b>–í–≤–µ–¥–∏—Ç–µ –Ω—É–∂–Ω—ã –∞—Ä–≥—É–º–µ–Ω—Ç—ã –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ:\n\n–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–∫–ª–∞–º—ã\n–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É\n–ö–æ–≥–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å</b>\n\n–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –∏–∑ —ç—Ç–æ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ "–ù–µ—Ç", —É–∫–∞–∑—ã–≤–∞–π—Ç–µ –¥–∞—Ç—É –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ: –≥–æ–¥-–º–µ—Å—è—Ü-—á–∏—Å–ª–æ —á–∞—Å—ã:–º–∏–Ω—É—Ç—ã (–ø—Ä–∏–º–µ—Ä: 2020-12-09 15:34)',parse_mode='HTML')
	bot.register_next_step_handler(msg, admin_send_message_all_text_rus)

def admin_send_message_all_text_rus(message):
	# try:
		global photoo
		global keyboar
		global time_send
		global v
		time_send = message.text.split('\n')[2]
		photoo = message.text.split('\n')[1]
		keyboar = message.text.split('\n')[0]
		v = 0
		if str(photoo.lower()) != '–ù–µ—Ç'.lower():
			v = v+1
			
		if str(keyboar.lower()) != '–ù–µ—Ç'.lower():
			v = v+2

		if v == 0:
			msg = bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:\n" + text_send_all,parse_mode='HTML')
			bot.register_next_step_handler(msg, admin_send_message_all_text_da_rus)
		
		elif v == 1:
			msg = bot.send_photo(message.chat.id,str(photoo), "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:\n" + text_send_all,parse_mode='HTML')
			bot.register_next_step_handler(msg, admin_send_message_all_text_da_rus)

		elif v == 2:
			msg = bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:\n" + text_send_all,parse_mode='HTML')
			bot.register_next_step_handler(msg, admin_send_message_all_text_da_rus)

		elif v == 3:
			msg = bot.send_photo(message.chat.id,str(photoo), "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:\n" + text_send_all,parse_mode='HTML')
			bot.register_next_step_handler(msg, admin_send_message_all_text_da_rus)
	# except:
	# 	bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤",parse_mode='HTML')

def admin_send_message_all_text_da_rus(message):
	otvet = message.text
	colvo_send_message_users = 0
	colvo_dont_send_message_users = 0
	if message.text.lower() == '–î–∞'.lower():
		if time_send.lower() == '–Ω–µ—Ç':
			bot.send_message(message.chat.id, f'<b>–°–æ–∑–¥–∞–π—Ç–µ —Ä–∞—Å—Å—ã–ª–∫—É –∑–∞–Ω–æ–≤–æ, –Ω–æ –ø—Ä–∏–±–∞–≤–∏–≤ –∫ —Ç–µ–∫—É—â–µ–º—É –≤—Ä–µ–º–µ–Ω–∏ 2-3 –º–∏–Ω—É—Ç—ã</b>',parse_mode='HTML')
				# except:
				# 	bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: '+ str(colvo_send_message_users)+'\n–ù–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: '+ str(colvo_dont_send_message_users))
		else:
			connection,q = connect()
			q.execute("INSERT INTO ugc_temp_sending (text,image,button,date) VALUES ('%s','%s','%s','%s')"%(text_send_all,photoo,keyboar,time_send))
			connection.commit()
			q.execute('update ugc_temp_sending set entit = "{}" where date = "{}"'.format(json_entit, time_send))
			connection.commit()
			bot.send_message(message.chat.id, f'<b>–£—Å–ø–µ—à–Ω–æ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–ª–∏ —Ä–∞—Å—Å—ã–ª–∫—É <code>{time_send}</code></b>',parse_mode='HTML')


def send_infa(message):
	connection,q = connect()
	q.execute(f'SELECT COUNT(userid) FROM ugc_users')
	colvo = q.fetchone()[0]
	q.execute(f'SELECT SUM(amount) FROM ugc_pays_btc')
	summa = q.fetchone()[0]
	print(int(summa)+11988)
	bot.send_message(message.chat.id, f'''<b>üå∫ –ù–µ–±–æ–ª—å—à–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞:

üë®‚Äçü¶∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <code>{int(colvo)+1237}</code>
üëî –û–±—â–∞—è —Å—É–º–º–∞ –æ—Ç–º—ã–≤–∞: <code>{int(summa)+11988}</code>
</b>
''', parse_mode='HTML')

bot.polling(none_stop=True)